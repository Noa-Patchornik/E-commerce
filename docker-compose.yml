version: "3.9"

services:
  # üêá RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_MANAGEMENT_LOAD_DEFINITIONS: /etc/rabbitmq/definitions.json
    ports:
      - "5672:5672"    # for internal connections
      - "15672:15672"  # for UI of RabbitMQ
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 5s
      timeout: 20s
      retries: 5
      start_period: 10s
    networks:
      - backend
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./infra/rabbitmq_definitions.json:/etc/rabbitmq/definitions.json


  # üçÉ MongoDB
  mongo:
    image: mongo:7
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  # üìà Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend

  # üìä Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      - backend

  # REST API
  api:
      build:
        context: ./api
        dockerfile: Dockerfile
      container_name: api_gateway
      ports:
        - "8000:80"
      volumes:
        - ./api:/app/api
      depends_on:
        rabbitmq:
          condition: service_healthy
      environment:
        RABBITMQ_URL: amqp://admin:admin@rabbitmq/
        MONGO_URL: mongodb://mongodb:27017
      networks:
        - backend

  # üì¶ Order Service
  orders:
      build:
        context: ./services/orders
        dockerfile: Dockerfile
      container_name: order_service
      volumes:
        - ./services/orders:/app/orders
      depends_on:
        rabbitmq:
          condition: service_healthy
        mongo:
          condition: service_started
      environment:
        RABBITMQ_URL: amqp://admin:admin@rabbitmq/
        MONGO_URL: mongodb://mongodb:27017
      networks:
        - backend

networks:
  backend:

volumes:
  rabbitmq_data:
  mongo_data:
